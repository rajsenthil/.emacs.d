#+TITLE: GOLANG Programming in Emacs
* Introduction
  Python configurations

  The elpy package (Emacs Lisp Python Environment) provides a near-complete set of Python IDE features, including:

    Automatic indentation
    Syntax highlighting
    Auto completion
    Syntax checking
    Python REPL integration
    Virtual environment support
    
  #+begin_src emacs-lisp
    (use-package better-defaults :ensure t)
    (use-package elpy :ensure t)
    (use-package flycheck :ensure t)
    (use-package py-autopep8 :ensure t)
    (use-package blacken :ensure t)
    (use-package ein :ensure t)
    (use-package material-theme :ensure t)

    ;; (defvar myPackages
    ;;   '(better-defaults                 ;; Set up some better Emacs defaults
    ;;     elpy                            ;; Emacs Lisp Python Environment
    ;;     flycheck                        ;; On the fly syntax checking
    ;;     py-autopep8                     ;; Run autopep8 on save
    ;;     blacken                         ;; Black formatting on save
    ;;     ein                             ;; Emacs IPython Notebook
    ;;     material-theme                  ;; Theme
    ;;   )
    ;; )
  #+end_src

* Configuring python environment

  #+begin_src emacs-lisp
    ;; ====================================
    ;; Development Setup
    ;; ====================================
    ;; Enable elpy
    (elpy-enable)
             
    ;; Enable autopep8
    (use-package py-autopep8 :ensure t)
    (add-hook 'elpy-mode-hook 'py-autopep8-enable-on-save)

        ;; Use IPython for REPL
    (setq python-shell-interpreter "jupyter"
          python-shell-interpreter-args "console --simple-prompt"
          python-shell-prompt-detect-failure-warning nil)
    (add-to-list 'python-shell-completion-native-disabled-interpreters
                 "jupyter")
    ;; Enable Flycheck
    (when (require 'flycheck nil t)
      (setq elpy-modules (delq 'elpy-module-flymake elpy-modules))
      (add-hook 'elpy-mode-hook 'flycheck-mode))

  #+end_src

  
* Installing pyvenv

#+begin_src emacs-lisp
  (use-package pyvenv
  :ensure t
  :config
  (pyvenv-mode t)

  ;; Set correct Python interpreter
  (setq pyvenv-post-activate-hooks
        (list (lambda ()
                (setq python-shell-interpreter (concat pyvenv-virtual-env "bin/python3")))))
  (setq pyvenv-post-deactivate-hooks
        (list (lambda ()
                (setq python-shell-interpreter "python3")))))
#+end_src
