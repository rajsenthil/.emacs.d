#+TITLE: GOLANG Programming in Emacs
* Introduction
  This configuration file contains setup of Emacs packages for golang. This is a follow-up after java-configurations. 

 * Pre-requisite

   Install gopls command

   `go install golang.org/x/tools/gopls@latest`

  `go install golang.org/x/tools/cmd/goimports@latest`
   
 * Configuring LSP Mode

** Loading LSP Mode in .emacs

#+begin_src emacs-lisp
  (use-package go-mode :ensure t)
  (use-package lsp-mode :ensure t)
  (add-hook 'go-mode-hook 'lsp-deferred)

  (add-hook 'before-save-hook 'gofmt-before-save)
  
  ;; Set up before-save hooks to format buffer and add/delete imports.
  ;; Make sure you don't have other gofmt/goimports hooks enabled.
  ;;(defun lsp-go-install-save-hooks ()
;;	(add-hook 'before-save-hook #'lsp-format-buffer t t)
;;	(add-hook 'before-save-hook #'lsp-organize-imports t t))
 ;; (add-hook 'go-mode-hook #'lsp-go-install-save-hooks)
  #+end_src
  
  Configuring gopls via LSP Mode
  See settings for information about available gopls settings.

  Stable gopls settings have corresponding configuration variables in lsp-mode. For example, (setq lsp-gopls-use-placeholders nil) will disable placeholders in completion snippets. See lsp-go for a list of available variables.

  Experimental settings can be configured via lsp-register-custom-settings:

  #+begin_src emacs-lisp
  (lsp-register-custom-settings
   '(("gopls.completeUnimported" t t)
	 ("gopls.staticcheck" t t)))
 #+end_src

   Note that after changing settings you must restart gopls using e.g. M-x lsp-restart-workspace.
